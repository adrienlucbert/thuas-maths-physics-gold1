name: Run Unity tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}

jobs:
  check-license:
    name: Check for the Unity license
    runs-on: ubuntu-latest
    steps:
      - name: Fail - No license
        if: ${{ !startsWith(env.UNITY_LICENSE, '<') }}
        run: exit 1

  run-tests:
    name: Run tests
    needs: [check-license]
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        UnityVersion:
          - 2020.3.29f1
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Create LFS file list
        run: git lfs ls-files -l | cut -d ' ' -f1 | sort > .lfs-assets-id
      - name: Restore LFS cache
        uses: actions/cache@v2
        id: lfs-cache
        with:
          path: .git/lfs
          key: ${{ runner.os }}-lfs-${{ hashFiles('.lfs-assets-id') }}
      - name: Git LFS Pull
        run: |
          git lfs pull
          git add .
          git reset --hard
      - uses: actions/cache@v2
        with:
          path: Library
          key: Library-Tests-${{ hashFiles('Assets/**', 'Packages/**', 'ProjectSettings/**') }}
          restore-keys: Library-Tests-
      - uses: game-ci/unity-test-runner@v2
        id: tests
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
        with:
          unityVersion: ${{ matrix.UnityVersion }}
          githubToken: ${{ github.token }}
      - uses: actions/upload-artifact@v2
        if: always()
        with:
          name: Test results
          path: ${{ steps.tests.outputs.artifactsPath }}
